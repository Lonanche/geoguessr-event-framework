var __awaiter=this&&this.__awaiter||function(d,_,a,v){function s(t){return t instanceof a?t:new a(function(n){n(t)})}return new(a||(a=Promise))(function(t,n){function r(o){try{l(v.next(o))}catch(u){n(u)}}function c(o){try{l(v.throw(o))}catch(u){n(u)}}function l(o){o.done?t(o.value):s(o.value).then(r,c)}l((v=v.apply(d,_||[])).next())})},GeoGuessrEventFramework;(function(){let d;const _=window.fetch;window.fetch=function(){return function(...s){return __awaiter(this,void 0,void 0,function*(){if(/geoguessr.com\/api\/v3\/(games|challenges)\//.test(s[0].toString())){let t=yield _.apply(window,s);return d=yield t.clone().json(),t}return _.apply(window,s)})}}();function a(s){return d&&d.round===s.current_round?d:null}class v{constructor(){this.events=new EventTarget,this.state=this.defaultState(),this.init(),this.loadState();let t=document.querySelector("#__next");if(!t)return;new MutationObserver(this.checkState.bind(this)).observe(t,{subtree:!0,childList:!0})}init(){return __awaiter(this,void 0,void 0,function*(){return this.loadedPromise||(this.loadedPromise=Promise.resolve(this)),this.loadedPromise})}defaultState(){return{current_game_id:"",is_challenge_link:!1,current_round:0,round_in_progress:!1,game_in_progress:!0,total_score:{amount:0,unit:"points",percentage:0},total_distance:{meters:{amount:0,unit:"km"},miles:{amount:0,unit:"miles"}},rounds:[],map:{id:"",name:""}}}loadState(){let t=window.localStorage.getItem("GeoGuessrEventFramework_STATE");if(!t)return;let n=JSON.parse(t);t&&(n.current_round=0,n.round_in_progress=!1,n.game_in_progress=!0,Object.assign(this.state,this.defaultState(),n),this.saveState())}saveState(){window.localStorage.setItem("GeoGuessrEventFramework_STATE",JSON.stringify(this.state))}getCurrentRound(){const t=document.querySelector('div[class^="status_inner__"]>div[data-qa="round-number"]'),n=t?.children[1].textContent;return n?parseInt(n.split(/\//gi)[0].trim()):0}getGameMode(){if(location.pathname.startsWith("/game/"))return"game";if(location.pathname.startsWith("/challenge/"))return"challenge"}getGameId(){return window.location.href.substring(window.location.href.lastIndexOf("/")+1)}startRound(){return __awaiter(this,void 0,void 0,function*(){if(!this.getGameMode())return;this.state.current_game_id!==this.getGameId()&&(this.state=this.defaultState()),this.state.current_round=this.getCurrentRound(),this.state.round_in_progress=!0,this.state.game_in_progress=!0,this.state.current_game_id=this.getGameId(),this.state.is_challenge_link=this.getGameMode()=="challenge";let t=a(this.state);t&&(this.state.map={id:t.map,name:t.mapName}),this.saveState(),this.state.current_round===1&&this.events.dispatchEvent(new CustomEvent("game_start",{detail:this.state})),this.events.dispatchEvent(new CustomEvent("round_start",{detail:this.state}))})}stopRound(){var t,n,r,c,l,o,u,h,m,g,p,f,w,S,y,G,E,k,b,F,C,I,D,R,q,x,N,O,T;return __awaiter(this,void 0,void 0,function*(){this.state.round_in_progress=!1;let e=a(this.state);if(e){const A=e.rounds[this.state.current_round-1],i=e.player.guesses[this.state.current_round-1];this.state.rounds[this.state.current_round-1]={location:{lat:A.lat,lng:A.lng},player_guess:{lat:i.lat,lng:i.lng},score:{amount:parseFloat((t=i?.roundScore)===null||t===void 0?void 0:t.amount)||0,unit:((n=i?.roundScore)===null||n===void 0?void 0:n.unit)||"points",percentage:((r=i?.roundScore)===null||r===void 0?void 0:r.percentage)||0},distance:{meters:{amount:parseFloat((l=(c=i?.distance)===null||c===void 0?void 0:c.meters)===null||l===void 0?void 0:l.amount)||0,unit:((u=(o=i?.distance)===null||o===void 0?void 0:o.meters)===null||u===void 0?void 0:u.unit)||"km"},miles:{amount:parseFloat((m=(h=i?.distance)===null||h===void 0?void 0:h.miles)===null||m===void 0?void 0:m.amount)||0,unit:((p=(g=i?.distance)===null||g===void 0?void 0:g.miles)===null||p===void 0?void 0:p.unit)||"miles"}}},this.state.total_score={amount:parseFloat((w=(f=e?.player)===null||f===void 0?void 0:f.totalScore)===null||w===void 0?void 0:w.amount)||0,unit:((y=(S=e?.player)===null||S===void 0?void 0:S.totalScore)===null||y===void 0?void 0:y.unit)||"points",percentage:((E=(G=e?.player)===null||G===void 0?void 0:G.totalScore)===null||E===void 0?void 0:E.percentage)||0},this.state.total_distance={meters:{amount:parseFloat((F=(b=(k=e?.player)===null||k===void 0?void 0:k.totalDistance)===null||b===void 0?void 0:b.meters)===null||F===void 0?void 0:F.amount)||0,unit:((D=(I=(C=e?.player)===null||C===void 0?void 0:C.totalDistance)===null||I===void 0?void 0:I.meters)===null||D===void 0?void 0:D.unit)||"km"},miles:{amount:parseFloat((x=(q=(R=e?.player)===null||R===void 0?void 0:R.totalDistance)===null||q===void 0?void 0:q.miles)===null||x===void 0?void 0:x.amount)||0,unit:((T=(O=(N=e?.player)===null||N===void 0?void 0:N.totalDistance)===null||O===void 0?void 0:O.miles)===null||T===void 0?void 0:T.unit)||"miles"}},this.state.map={id:e.map,name:e.mapName}}this.saveState(),this.events.dispatchEvent(new CustomEvent("round_end",{detail:this.state})),this.state.current_round===5&&this.events.dispatchEvent(new CustomEvent("game_end",{detail:this.state}))})}checkState(){const t=document.querySelector(".game-layout"),n=document.querySelector('div[class^="round-result_wrapper__"]'),r=document.querySelector('div[class^="result-layout_root__"] div[class^="result-overlay_overlayContent__"]');t&&(this.state.current_round!==this.getCurrentRound()||this.state.current_game_id!==this.getGameId()?(this.state.round_in_progress&&this.stopRound(),this.startRound()):n&&this.state.round_in_progress?this.stopRound():r&&this.state.game_in_progress&&(this.state.game_in_progress=!1))}}GeoGuessrEventFramework=new v,console.log("GeoGuessr Event Framework initialised: https://github.com/miraclewhips/geoguessr-event-framework")})();
