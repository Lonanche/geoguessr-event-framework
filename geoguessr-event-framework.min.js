var __awaiter=this&&this.__awaiter||function(a,u,r,o){function s(t){return t instanceof r?t:new r(function(e){e(t)})}return new(r||(r=Promise))(function(t,e){function n(i){try{l(o.next(i))}catch(d){e(d)}}function c(i){try{l(o.throw(i))}catch(d){e(d)}}function l(i){i.done?t(i.value):s(i.value).then(n,c)}l((o=o.apply(a,u||[])).next())})},GeoGuessrEventFramework;(function(){let a;const u=window.fetch;window.fetch=function(){return function(...s){return __awaiter(this,void 0,void 0,function*(){if(/geoguessr.com\/api\/v3\/(games|challenges)\//.test(s[0].toString())){let t=yield u.apply(window,s);return a=yield t.clone().json(),t}return u.apply(window,s)})}}();function r(s){return a&&a.token===s.current_game_id&&a.round===s.current_round?a:null}class o{constructor(){this.events=new EventTarget,this.state=this.defaultState(),this.init(),this.loadState();let t=document.querySelector("#__next");if(!t)return;new MutationObserver(this.checkState.bind(this)).observe(t,{subtree:!0,childList:!0})}init(){return __awaiter(this,void 0,void 0,function*(){return this.loadedPromise||(this.loadedPromise=Promise.resolve(this)),this.loadedPromise})}defaultState(){return{current_game_id:"",is_challenge_link:!1,current_round:0,round_in_progress:!1,game_in_progress:!0,total_score:{amount:0,unit:"points",percentage:0},total_distance:{meters:{amount:0,unit:"km"},miles:{amount:0,unit:"miles"}},rounds:[],map:{id:"",name:""}}}loadState(){let t=window.localStorage.getItem("GeoGuessrEventFramework_STATE");if(!t)return;let e=JSON.parse(t);t&&(e.current_round=0,e.round_in_progress=!1,e.game_in_progress=!0,Object.assign(this.state,this.defaultState(),e),this.saveState())}saveState(){window.localStorage.setItem("GeoGuessrEventFramework_STATE",JSON.stringify(this.state))}getCurrentRound(){const t=document.querySelector('div[class^="status_inner__"]>div[data-qa="round-number"]'),e=t?.children[1].textContent;return e?parseInt(e.split(/\//gi)[0].trim()):0}getGameMode(){if(location.pathname.startsWith("/game/"))return"game";if(location.pathname.startsWith("/challenge/"))return"challenge"}getGameId(){return window.location.href.substring(window.location.href.lastIndexOf("/")+1)}startRound(){return __awaiter(this,void 0,void 0,function*(){if(!this.getGameMode())return;this.state.current_game_id!==this.getGameId()&&(this.state=this.defaultState()),this.state.current_round=this.getCurrentRound(),this.state.round_in_progress=!0,this.state.game_in_progress=!0,this.state.current_game_id=this.getGameId(),this.state.is_challenge_link=this.getGameMode()=="challenge";let t=r(this.state);t&&(this.state.map={id:t.map,name:t.mapName}),this.saveState(),console.log("round_start"),console.log(this.state),this.state.current_round===1&&this.events.dispatchEvent(new CustomEvent("game_start",{detail:this.state})),this.events.dispatchEvent(new CustomEvent("round_start",{detail:this.state}))})}stopRound(){return __awaiter(this,void 0,void 0,function*(){this.state.round_in_progress=!1;let t=r(this.state);if(t){const e=t.rounds[this.state.current_round-1],n=t.player.guesses[this.state.current_round-1];this.state.rounds[this.state.current_round-1]={location:{lat:e.lat,lng:e.lng},player_guess:{lat:n.lat,lng:n.lng},score:{amount:parseFloat(n.roundScore.amount),unit:n.roundScore.unit,percentage:n.roundScore.percentage},distance:{meters:{amount:parseFloat(n.distance.meters.amount),unit:n.distance.meters.unit},miles:{amount:parseFloat(n.distance.miles.amount),unit:n.distance.miles.unit}}},this.state.total_score={amount:parseFloat(t.player.totalScore.amount),unit:t.player.totalScore.unit,percentage:t.player.totalScore.percentage},this.state.total_distance={meters:{amount:parseFloat(t.player.totalDistance.meters.amount),unit:t.player.totalDistance.meters.unit},miles:{amount:parseFloat(t.player.totalDistance.miles.amount),unit:t.player.totalDistance.miles.unit}},this.state.map={id:t.map,name:t.mapName}}this.saveState(),console.log("round_end"),console.log(this.state),this.events.dispatchEvent(new CustomEvent("round_end",{detail:this.state})),this.state.current_round===5&&this.events.dispatchEvent(new CustomEvent("game_end",{detail:this.state}))})}checkState(){const t=document.querySelector(".game-layout"),e=document.querySelector('div[class^="round-result_wrapper__"]'),n=document.querySelector('div[class^="result-layout_root__"] div[class^="result-overlay_overlayContent__"]');t&&(this.state.current_round!==this.getCurrentRound()||this.state.current_game_id!==this.getGameId()?(this.state.round_in_progress&&this.stopRound(),this.startRound()):e&&this.state.round_in_progress?this.stopRound():n&&this.state.game_in_progress&&(this.state.game_in_progress=!1))}}GeoGuessrEventFramework=new o,console.log("GeoGuessr Event Framework initialised: https://github.com/miraclewhips/geoguessr-event-framework")})();
