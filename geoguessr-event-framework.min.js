var __awaiter=this&&this.__awaiter||function(c,A,t,i){function n(o){return o instanceof t?o:new t(function(s){s(o)})}return new(t||(t=Promise))(function(o,s){function r(l){try{d(i.next(l))}catch(a){s(a)}}function v(l){try{d(i.throw(l))}catch(a){s(a)}}function d(l){l.done?o(l.value):n(l.value).then(r,v)}d((i=i.apply(c,A||[])).next())})};const THE_WINDOW=unsafeWindow||window;(function(){class c{constructor(){this.events=new EventTarget,this.state=this.defaultState(),THE_WINDOW.addEventListener("load",()=>{var t,i,n;if(location.pathname.startsWith("/challenge/")){const o=(n=(i=(t=THE_WINDOW?.__NEXT_DATA__)===null||t===void 0?void 0:t.props)===null||i===void 0?void 0:i.pageProps)===null||n===void 0?void 0:n.gameSnapshot;if(!o||!o.round)return;this.parseData(o)}this.checkFetchIsOverriden()}),this.init(),this.loadState()}checkFetchIsOverriden(){let t=document.querySelector("#__next");if(!t)return;new MutationObserver(()=>{THE_WINDOW.fetch.isGEFFetch||this.overrideFetch()}).observe(t,{subtree:!0,childList:!0})}overrideFetch(){if(THE_WINDOW.fetch.isGEFFetch)return;const t=THE_WINDOW.fetch;THE_WINDOW.fetch=function(i){return function(...n){return __awaiter(this,void 0,void 0,function*(){const o=n[0].toString();if(/geoguessr.com\/api\/v3\/(games|challenges)\//.test(o)&&o.indexOf("daily-challenge")===-1){const s=yield t.apply(THE_WINDOW,n),r=yield s.clone().json();return r.round&&i.parseData(r),s}return t.apply(THE_WINDOW,n)})}}(this),THE_WINDOW.fetch.isGEFFetch=!0}init(){return __awaiter(this,void 0,void 0,function*(){return this.loadedPromise||(this.loadedPromise=Promise.resolve(this)),this.overrideFetch(),yield this.loadedPromise})}defaultState(){return{current_game_id:"",is_challenge_link:!1,current_round:0,round_in_progress:!1,game_in_progress:!0,total_score:{amount:0,unit:"points",percentage:0},total_distance:{meters:{amount:0,unit:"km"},miles:{amount:0,unit:"miles"}},total_time:0,rounds:[],map:{id:"",name:""}}}parseData(t){t.player.guesses.length==t.round?this.stopRound(t):this.startRound(t)}loadState(){let t=window.localStorage.getItem("GeoGuessrEventFramework_STATE");if(!t)return;let i=JSON.parse(t);i&&(Object.assign(this.state,this.defaultState(),i),this.saveState())}saveState(){window.localStorage.setItem("GeoGuessrEventFramework_STATE",JSON.stringify(this.state))}hex2a(t){const i=t.toString();let n="";for(let o=0;o<i.length;o+=2)n+=String.fromCharCode(parseInt(i.substr(o,2),16));return n}startRound(t){this.state.current_round=t.round,this.state.round_in_progress=!0,this.state.game_in_progress=!0,this.state.current_game_id=t.token,this.state.is_challenge_link=t.type=="challenge",this.state.rounds=this.state.rounds.slice(0,t.round-1),t&&(this.state.map={id:t.map,name:t.mapName}),this.saveState(),this.state.current_round===1&&this.events.dispatchEvent(new CustomEvent("game_start",{detail:this.state})),this.events.dispatchEvent(new CustomEvent("round_start",{detail:this.state}))}stopRound(t){var i,n,o,s,r,v,d,l,a,h,m,_,p,f,g,w,S,y,E,F,k,G,b,D,I,T,x,O,C,N;if(this.state.round_in_progress=!1,t){const u=t.rounds[this.state.current_round-1],e=t.player.guesses[this.state.current_round-1];if(!u||!e)return;this.state.rounds[this.state.current_round-1]={location:{lat:u.lat,lng:u.lng,heading:u.heading,pitch:u.pitch,zoom:u.zoom,panoId:u.panoId?this.hex2a(u.panoId):void 0},player_guess:{lat:e.lat,lng:e.lng},score:{amount:parseFloat((i=e?.roundScore)===null||i===void 0?void 0:i.amount)||0,unit:((n=e?.roundScore)===null||n===void 0?void 0:n.unit)||"points",percentage:((o=e?.roundScore)===null||o===void 0?void 0:o.percentage)||0},distance:{meters:{amount:parseFloat((r=(s=e?.distance)===null||s===void 0?void 0:s.meters)===null||r===void 0?void 0:r.amount)||0,unit:((d=(v=e?.distance)===null||v===void 0?void 0:v.meters)===null||d===void 0?void 0:d.unit)||"km"},miles:{amount:parseFloat((a=(l=e?.distance)===null||l===void 0?void 0:l.miles)===null||a===void 0?void 0:a.amount)||0,unit:((m=(h=e?.distance)===null||h===void 0?void 0:h.miles)===null||m===void 0?void 0:m.unit)||"miles"}},time:e?.time},this.state.total_score={amount:parseFloat((p=(_=t?.player)===null||_===void 0?void 0:_.totalScore)===null||p===void 0?void 0:p.amount)||0,unit:((g=(f=t?.player)===null||f===void 0?void 0:f.totalScore)===null||g===void 0?void 0:g.unit)||"points",percentage:((S=(w=t?.player)===null||w===void 0?void 0:w.totalScore)===null||S===void 0?void 0:S.percentage)||0},this.state.total_distance={meters:{amount:parseFloat((F=(E=(y=t?.player)===null||y===void 0?void 0:y.totalDistance)===null||E===void 0?void 0:E.meters)===null||F===void 0?void 0:F.amount)||0,unit:((b=(G=(k=t?.player)===null||k===void 0?void 0:k.totalDistance)===null||G===void 0?void 0:G.meters)===null||b===void 0?void 0:b.unit)||"km"},miles:{amount:parseFloat((T=(I=(D=t?.player)===null||D===void 0?void 0:D.totalDistance)===null||I===void 0?void 0:I.miles)===null||T===void 0?void 0:T.amount)||0,unit:((C=(O=(x=t?.player)===null||x===void 0?void 0:x.totalDistance)===null||O===void 0?void 0:O.miles)===null||C===void 0?void 0:C.unit)||"miles"}},this.state.total_time=(N=t?.player)===null||N===void 0?void 0:N.totalTime,this.state.map={id:t.map,name:t.mapName}}this.saveState(),this.events.dispatchEvent(new CustomEvent("round_end",{detail:this.state})),this.state.current_round===5&&this.events.dispatchEvent(new CustomEvent("game_end",{detail:this.state}))}}THE_WINDOW.GeoGuessrEventFramework||(THE_WINDOW.GeoGuessrEventFramework=new c,console.log("GeoGuessr Event Framework initialised: https://github.com/miraclewhips/geoguessr-event-framework"))})();
